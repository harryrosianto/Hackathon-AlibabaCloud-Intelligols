"""add role

Revision ID: 50005a7b99f1
Revises: e541c075e899
Create Date: 2024-08-28 18:31:26.422449

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '50005a7b99f1'
down_revision = 'e541c075e899'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm") 
    # ### commands auto generated by Alembic - please adjust! ###
    gender_enum = sa.Enum('female', 'male', 'other', name='genderenum')
    gender_enum.create(op.get_bind(), checkfirst=True)

    op.create_table('role',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('descs', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_id'), 'role', ['id'], unique=False)
    op.add_column('user', sa.Column('birthdate', sa.DateTime(timezone=True), nullable=True))
    op.add_column('user', sa.Column('role_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('user', sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('user', sa.Column('gender', sa.Enum('female', 'male', 'other', name='genderenum'), nullable=True))
    op.add_column('user', sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('user', sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('user', sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('user', sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.create_index(op.f('ix_user_hashed_password'), 'user', ['hashed_password'], unique=False)
    op.create_foreign_key(None, 'user', 'role', ['role_id'], ['id'])
    op.drop_column('user', 'role')
    gender_enum = sa.Enum('ADMIN', 'FARMER', 'BUYER', name='userroleenum')
    gender_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('role', postgresql.ENUM('ADMIN', 'FARMER', 'BUYER', name='userroleenum'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_index(op.f('ix_user_hashed_password'), table_name='user')
    op.drop_column('user', 'hashed_password')
    op.drop_column('user', 'address')
    op.drop_column('user', 'country')
    op.drop_column('user', 'state')
    op.drop_column('user', 'gender')
    op.drop_column('user', 'phone')
    op.drop_column('user', 'role_id')
    op.drop_column('user', 'birthdate')
    op.drop_index(op.f('ix_role_id'), table_name='role')
    op.drop_table('role')
    # ### end Alembic commands ###