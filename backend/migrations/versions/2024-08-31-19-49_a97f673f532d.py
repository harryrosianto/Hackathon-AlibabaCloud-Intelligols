"""adding tables

Revision ID: a97f673f532d
Revises: b5c0fb37306d
Create Date: 2024-08-31 19:49:26.304677

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a97f673f532d'
down_revision = 'b5c0fb37306d'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm") 
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analysis',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('descs', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analysis_id'), 'analysis', ['id'], unique=False)
    op.create_table('bean_type',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('descs', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bean_type_id'), 'bean_type', ['id'], unique=False)
    op.create_table('farming_info',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('watering_date', sa.Date(), nullable=False),
    sa.Column('plant_health_date', sa.Date(), nullable=False),
    sa.Column('day_of_planting', sa.Date(), nullable=False),
    sa.Column('weather_temperature', sa.Float(), nullable=False),
    sa.Column('soil_moisture', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('grow_stage', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('fertilization_date', sa.Date(), nullable=False),
    sa.Column('treatment_applied', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('labor_usage', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_farming_info_id'), 'farming_info', ['id'], unique=False)
    op.create_table('roast_level',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('descs', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roast_level_id'), 'roast_level', ['id'], unique=False)
    op.create_table('bean_quality',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('bean_type_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('altitude', sa.Float(), nullable=False),
    sa.Column('weather_temperature', sa.Float(), nullable=False),
    sa.Column('weather_rainfall', sa.Float(), nullable=False),
    sa.Column('humidity', sa.Float(), nullable=False),
    sa.Column('soil_ph', sa.Float(), nullable=False),
    sa.Column('soil_texture', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('plant_age', sa.Float(), nullable=False),
    sa.Column('disease', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['bean_type_id'], ['bean_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bean_quality_id'), 'bean_quality', ['id'], unique=False)
    op.create_table('buyer_preferences',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('roast_level_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('origin', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('processing_method', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('flavor_profile', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('max_price', sa.Float(), nullable=False),
    sa.Column('min_price', sa.Float(), nullable=False),
    sa.Column('stock_quantity', sa.Integer(), nullable=True),
    sa.Column('delivery_frequency', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('favorite_brands', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('descs', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['roast_level_id'], ['roast_level.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_buyer_preferences_id'), 'buyer_preferences', ['id'], unique=False)
    op.create_table('disease_management',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('bean_type_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('plant_age', sa.Float(), nullable=False),
    sa.Column('observed_symptoms', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('affected_parts', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('pest_presence', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('disease_identification', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('pest_control_methods', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('disease_management_methods', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('climate_conditions', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('watering_practices', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('fertilizer_use', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('soil_condition', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('budget', sa.Float(), nullable=False),
    sa.Column('available_resources', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['bean_type_id'], ['bean_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_disease_management_id'), 'disease_management', ['id'], unique=False)
    op.create_table('growth',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('altitude', sa.Float(), nullable=False),
    sa.Column('average_temperature', sa.Float(), nullable=False),
    sa.Column('annual_rainfall', sa.Float(), nullable=False),
    sa.Column('humidity', sa.Float(), nullable=False),
    sa.Column('soil_ph', sa.Float(), nullable=False),
    sa.Column('soil_texture', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bean_type_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('initial_investment', sa.Float(), nullable=False),
    sa.Column('available_resources', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['bean_type_id'], ['bean_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_growth_id'), 'growth', ['id'], unique=False)
    op.create_table('marketplace',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('origin', sqlmodel.sql.sqltypes.AutoString(length=100), ),
    sa.Column('processing_method', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('bean_type_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('roast_level_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('stock_quantity', sa.Integer(), nullable=False),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['bean_type_id'], ['bean_type.id'], ),
    sa.ForeignKeyConstraint(['roast_level_id'], ['roast_level.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_marketplace_id'), 'marketplace', ['id'], unique=False)
    op.drop_index('ix_product_id', table_name='product')
    op.drop_table('product')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product',
    sa.Column('id', sa.VARCHAR(length=26), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('variety', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('quality', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('farmer_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('descs', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['farmer_id'], ['user.id'], name='product_farmer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='product_pkey')
    )
    op.create_index('ix_product_id', 'product', ['id'], unique=False)
    op.drop_index(op.f('ix_marketplace_id'), table_name='marketplace')
    op.drop_table('marketplace')
    op.drop_index(op.f('ix_growth_id'), table_name='growth')
    op.drop_table('growth')
    op.drop_index(op.f('ix_disease_management_id'), table_name='disease_management')
    op.drop_table('disease_management')
    op.drop_index(op.f('ix_buyer_preferences_id'), table_name='buyer_preferences')
    op.drop_table('buyer_preferences')
    op.drop_index(op.f('ix_bean_quality_id'), table_name='bean_quality')
    op.drop_table('bean_quality')
    op.drop_index(op.f('ix_roast_level_id'), table_name='roast_level')
    op.drop_table('roast_level')
    op.drop_index(op.f('ix_farming_info_id'), table_name='farming_info')
    op.drop_table('farming_info')
    op.drop_index(op.f('ix_bean_type_id'), table_name='bean_type')
    op.drop_table('bean_type')
    op.drop_index(op.f('ix_analysis_id'), table_name='analysis')
    op.drop_table('analysis')
    # ### end Alembic commands ###